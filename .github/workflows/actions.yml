name: Frogtoberfest

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Build:
    name: Running unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node 12
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Build
        run: yarn build

      - name: Build
        run: yarn test
  # Deploy:
  #   needs: Build
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [2.7]
  #     fail-fast: true
  #   if: github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Copy .npmrc
  #       run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.LAUDIO_GITHUB_TOKEN }}" > ~/.npmrc
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Add SSH Key
  #       run: |
  #         mkdir -p ~/.ssh/
  #         echo -e "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
  #     - name: Install Python Dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Install OpenVPN
  #       run: sudo apt-get install openvpn
  #     # ${GITHUB_REF##*/} gives the current branch name.
  #     - name: Deploy
  #       run: |
  #         echo -e "${{ secrets.VPN_USER }}\n${{ secrets.VPN_PASS }}" > ~/.vpncreds
  #         sudo openvpn --config config.ovpn --auth-user-pass ~/.vpncreds --daemon
  #         sleep 10s
  #         fab ${GITHUB_REF##*/} deploy
  #       env:
  #         VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
  #         VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
